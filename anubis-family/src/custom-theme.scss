// Custom Theming for Angular Material
@use '@angular/material' as mat;
// For more information: https://material.angular.io/guide/theming
@include mat.core();

$anubis-family-primary: mat.define-palette(mat.$grey-palette, 500);
$anubis-family-accent: mat.define-palette(mat.$red-palette, 500);
$anubis-family-warn: mat.define-palette(mat.$amber-palette, 500);
$anubis-family-background: mat.define-palette(mat.$red-palette, 500);
$anubis-family-foreground: mat.define-palette(mat.$deep-orange-palette, A200);


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$anubis-family-theme: mat.define-light-theme((
  color: (
    primary: $anubis-family-primary,
    accent: $anubis-family-accent,
    warn: $anubis-family-warn,
    background: $anubis-family-background,
    foreground: $anubis-family-foreground,
  )
));

.test-class {
  color : mat.get-color-from-palette($anubis-family-primary);
  background-color: mat.get-color-from-palette($anubis-family-accent, 300);
  outline-color: mat.get-color-from-palette($anubis-family-accent, lighter);

  // Get a contrast color for a hue by adding `-contrast` to any other key.
  border-color: mat.get-color-from-palette($anubis-family-primary, '100-contrast');
}
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($anubis-family-theme);

